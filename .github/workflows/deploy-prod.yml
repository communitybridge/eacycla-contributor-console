# Copyright The Linux Foundation and each contributor to LFX.
# SPDX-License-Identifier: MIT

name: Prod Deployment Workflow

on:
  push:
    tags:
      - v0.*
      - v1.*
      - v2.*
      - v3.*

jobs:
  build_prod:
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: yarn
          cache-dependency-path: "yarn.lock"
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1
          role-duration-seconds: 900

      - name: Build prod
        run: yarn build:${STAGE}
      
      - name: Build Edge
        run: |
          pushd edge
          yarn build
          popd

  deploy_prod:
    runs-on: ubuntu-latest
    needs: build_prod
    environment: prod
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16
          cache: yarn
          cache-dependency-path: "yarn.lock"

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region: us-east-1
          role-duration-seconds: 900

      - name: Build prod
        run: yarn build:${STAGE}
      
      - name: Build Edge
        run: |
          pushd edge
          yarn build
          popd
      
      - name: Deploy Cloudfront and LambdaEdge
        run: |
          SLS_DEBUG=* yarn sls deploy --stage="${STAGE}" --verbose
      
      - name: Deploy Frontend Bucket
        run: |
          SLS_DEBUG=* yarn sls client deploy --stage="${STAGE}" --verbose --no-confirm
      
      - name: Invalidate Cloudfront Cache
        run: |
          aws --region ${AWS_REGION} cloudfront create-invalidation --distribution-id ${DISTRIBUTION_ID} --paths "/*"
        env:
          AWS_REGION: us-east-1
          STAGE: prod
          ROOT_DOMAIN: communitybridge.org
          PRODUCT_DOMAIN: easycla.communitybridge.org
          DISTRIBUTION_ID: E2IOYBQJKK668Q
